# Makefile.in generated by automake 1.11.1 from Makefile.am.
# @configure_input@

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006, 2007, 2008, 2009  Free Software Foundation,
# Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@
VPATH = @srcdir@
pkgdatadir = $(datadir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkglibexecdir = $(libexecdir)/@PACKAGE@
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = @build@
host_triplet = @host@
check_PROGRAMS = test_ccl$(EXEEXT) test_comstack$(EXEEXT) \
	test_cql2ccl$(EXEEXT) test_filepath$(EXEEXT) \
	test_file_glob$(EXEEXT) test_iconv$(EXEEXT) test_icu$(EXEEXT) \
	test_json$(EXEEXT) test_libstemmer$(EXEEXT) test_log$(EXEEXT) \
	test_log_thread$(EXEEXT) test_match_glob$(EXEEXT) \
	test_matchstr$(EXEEXT) test_mutex$(EXEEXT) test_nmem$(EXEEXT) \
	test_odr$(EXEEXT) test_odrstack$(EXEEXT) test_oid$(EXEEXT) \
	test_options$(EXEEXT) test_pquery$(EXEEXT) \
	test_query_charset$(EXEEXT) test_record_conv$(EXEEXT) \
	test_rpn2cql$(EXEEXT) test_rpn2solr$(EXEEXT) \
	test_retrieval$(EXEEXT) test_shared_ptr$(EXEEXT) \
	test_soap1$(EXEEXT) test_soap2$(EXEEXT) test_solr$(EXEEXT) \
	test_sortspec$(EXEEXT) test_timing$(EXEEXT) \
	test_tpath$(EXEEXT) test_wrbuf$(EXEEXT) test_xmalloc$(EXEEXT) \
	test_xml_include$(EXEEXT) test_xmlquery$(EXEEXT)
subdir = test
DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/m4/ac_check_icu.m4 \
	$(top_srcdir)/m4/acx_pthread.m4 $(top_srcdir)/m4/libtool.m4 \
	$(top_srcdir)/m4/ltoptions.m4 $(top_srcdir)/m4/ltsugar.m4 \
	$(top_srcdir)/m4/ltversion.m4 $(top_srcdir)/m4/lt~obsolete.m4 \
	$(top_srcdir)/m4/yaz.m4 $(top_srcdir)/m4/yaz_libxml2.m4 \
	$(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/include/config.h
CONFIG_CLEAN_VPATH_FILES =
am_test_ccl_OBJECTS = test_ccl.$(OBJEXT)
test_ccl_OBJECTS = $(am_test_ccl_OBJECTS)
test_ccl_LDADD = $(LDADD)
test_ccl_DEPENDENCIES = ../src/libyaz.la
am_test_comstack_OBJECTS = test_comstack.$(OBJEXT)
test_comstack_OBJECTS = $(am_test_comstack_OBJECTS)
test_comstack_LDADD = $(LDADD)
test_comstack_DEPENDENCIES = ../src/libyaz.la
am_test_cql2ccl_OBJECTS = test_cql2ccl.$(OBJEXT)
test_cql2ccl_OBJECTS = $(am_test_cql2ccl_OBJECTS)
test_cql2ccl_LDADD = $(LDADD)
test_cql2ccl_DEPENDENCIES = ../src/libyaz.la
am_test_file_glob_OBJECTS = test_file_glob.$(OBJEXT)
test_file_glob_OBJECTS = $(am_test_file_glob_OBJECTS)
test_file_glob_LDADD = $(LDADD)
test_file_glob_DEPENDENCIES = ../src/libyaz.la
am_test_filepath_OBJECTS = test_filepath.$(OBJEXT)
test_filepath_OBJECTS = $(am_test_filepath_OBJECTS)
test_filepath_LDADD = $(LDADD)
test_filepath_DEPENDENCIES = ../src/libyaz.la
am_test_iconv_OBJECTS = test_iconv.$(OBJEXT)
test_iconv_OBJECTS = $(am_test_iconv_OBJECTS)
test_iconv_LDADD = $(LDADD)
test_iconv_DEPENDENCIES = ../src/libyaz.la
am_test_icu_OBJECTS = test_icu.$(OBJEXT)
test_icu_OBJECTS = $(am_test_icu_OBJECTS)
am__DEPENDENCIES_1 =
test_icu_DEPENDENCIES = ../src/libyaz_icu.la ../src/libyaz.la \
	$(am__DEPENDENCIES_1)
am_test_json_OBJECTS = test_json.$(OBJEXT)
test_json_OBJECTS = $(am_test_json_OBJECTS)
test_json_LDADD = $(LDADD)
test_json_DEPENDENCIES = ../src/libyaz.la
am_test_libstemmer_OBJECTS = test_libstemmer.$(OBJEXT)
test_libstemmer_OBJECTS = $(am_test_libstemmer_OBJECTS)
test_libstemmer_DEPENDENCIES = ../src/libyaz_icu.la ../src/libyaz.la \
	$(am__DEPENDENCIES_1)
am_test_log_OBJECTS = test_log.$(OBJEXT)
test_log_OBJECTS = $(am_test_log_OBJECTS)
test_log_LDADD = $(LDADD)
test_log_DEPENDENCIES = ../src/libyaz.la
am_test_log_thread_OBJECTS = test_log_thread.$(OBJEXT)
test_log_thread_OBJECTS = $(am_test_log_thread_OBJECTS)
test_log_thread_LDADD = $(LDADD)
test_log_thread_DEPENDENCIES = ../src/libyaz.la
am_test_match_glob_OBJECTS = test_match_glob.$(OBJEXT)
test_match_glob_OBJECTS = $(am_test_match_glob_OBJECTS)
test_match_glob_LDADD = $(LDADD)
test_match_glob_DEPENDENCIES = ../src/libyaz.la
am_test_matchstr_OBJECTS = test_matchstr.$(OBJEXT)
test_matchstr_OBJECTS = $(am_test_matchstr_OBJECTS)
test_matchstr_LDADD = $(LDADD)
test_matchstr_DEPENDENCIES = ../src/libyaz.la
am_test_mutex_OBJECTS = test_mutex.$(OBJEXT)
test_mutex_OBJECTS = $(am_test_mutex_OBJECTS)
test_mutex_LDADD = $(LDADD)
test_mutex_DEPENDENCIES = ../src/libyaz.la
am_test_nmem_OBJECTS = test_nmem.$(OBJEXT)
test_nmem_OBJECTS = $(am_test_nmem_OBJECTS)
test_nmem_LDADD = $(LDADD)
test_nmem_DEPENDENCIES = ../src/libyaz.la
am_test_odr_OBJECTS = test_odrcodec.$(OBJEXT) test_odr.$(OBJEXT)
test_odr_OBJECTS = $(am_test_odr_OBJECTS)
test_odr_LDADD = $(LDADD)
test_odr_DEPENDENCIES = ../src/libyaz.la
am_test_odrstack_OBJECTS = test_odrstack.$(OBJEXT)
test_odrstack_OBJECTS = $(am_test_odrstack_OBJECTS)
test_odrstack_LDADD = $(LDADD)
test_odrstack_DEPENDENCIES = ../src/libyaz.la
am_test_oid_OBJECTS = test_oid.$(OBJEXT)
test_oid_OBJECTS = $(am_test_oid_OBJECTS)
test_oid_LDADD = $(LDADD)
test_oid_DEPENDENCIES = ../src/libyaz.la
am_test_options_OBJECTS = test_options.$(OBJEXT)
test_options_OBJECTS = $(am_test_options_OBJECTS)
test_options_LDADD = $(LDADD)
test_options_DEPENDENCIES = ../src/libyaz.la
am_test_pquery_OBJECTS = test_pquery.$(OBJEXT)
test_pquery_OBJECTS = $(am_test_pquery_OBJECTS)
test_pquery_LDADD = $(LDADD)
test_pquery_DEPENDENCIES = ../src/libyaz.la
am_test_query_charset_OBJECTS = test_query_charset.$(OBJEXT)
test_query_charset_OBJECTS = $(am_test_query_charset_OBJECTS)
test_query_charset_LDADD = $(LDADD)
test_query_charset_DEPENDENCIES = ../src/libyaz.la
am_test_record_conv_OBJECTS = test_record_conv.$(OBJEXT)
test_record_conv_OBJECTS = $(am_test_record_conv_OBJECTS)
test_record_conv_LDADD = $(LDADD)
test_record_conv_DEPENDENCIES = ../src/libyaz.la
am_test_retrieval_OBJECTS = test_retrieval.$(OBJEXT)
test_retrieval_OBJECTS = $(am_test_retrieval_OBJECTS)
test_retrieval_LDADD = $(LDADD)
test_retrieval_DEPENDENCIES = ../src/libyaz.la
am_test_rpn2cql_OBJECTS = test_rpn2cql.$(OBJEXT)
test_rpn2cql_OBJECTS = $(am_test_rpn2cql_OBJECTS)
test_rpn2cql_LDADD = $(LDADD)
test_rpn2cql_DEPENDENCIES = ../src/libyaz.la
am_test_rpn2solr_OBJECTS = test_rpn2solr.$(OBJEXT)
test_rpn2solr_OBJECTS = $(am_test_rpn2solr_OBJECTS)
test_rpn2solr_LDADD = $(LDADD)
test_rpn2solr_DEPENDENCIES = ../src/libyaz.la
am_test_shared_ptr_OBJECTS = test_shared_ptr.$(OBJEXT)
test_shared_ptr_OBJECTS = $(am_test_shared_ptr_OBJECTS)
test_shared_ptr_LDADD = $(LDADD)
test_shared_ptr_DEPENDENCIES = ../src/libyaz.la
am_test_soap1_OBJECTS = test_soap1.$(OBJEXT)
test_soap1_OBJECTS = $(am_test_soap1_OBJECTS)
test_soap1_LDADD = $(LDADD)
test_soap1_DEPENDENCIES = ../src/libyaz.la
am_test_soap2_OBJECTS = test_soap2.$(OBJEXT)
test_soap2_OBJECTS = $(am_test_soap2_OBJECTS)
test_soap2_LDADD = $(LDADD)
test_soap2_DEPENDENCIES = ../src/libyaz.la
am_test_solr_OBJECTS = test_solr.$(OBJEXT)
test_solr_OBJECTS = $(am_test_solr_OBJECTS)
test_solr_LDADD = $(LDADD)
test_solr_DEPENDENCIES = ../src/libyaz.la
am_test_sortspec_OBJECTS = test_sortspec.$(OBJEXT)
test_sortspec_OBJECTS = $(am_test_sortspec_OBJECTS)
test_sortspec_LDADD = $(LDADD)
test_sortspec_DEPENDENCIES = ../src/libyaz.la
am_test_timing_OBJECTS = test_timing.$(OBJEXT)
test_timing_OBJECTS = $(am_test_timing_OBJECTS)
test_timing_LDADD = $(LDADD)
test_timing_DEPENDENCIES = ../src/libyaz.la
am_test_tpath_OBJECTS = test_tpath.$(OBJEXT)
test_tpath_OBJECTS = $(am_test_tpath_OBJECTS)
test_tpath_LDADD = $(LDADD)
test_tpath_DEPENDENCIES = ../src/libyaz.la
am_test_wrbuf_OBJECTS = test_wrbuf.$(OBJEXT)
test_wrbuf_OBJECTS = $(am_test_wrbuf_OBJECTS)
test_wrbuf_LDADD = $(LDADD)
test_wrbuf_DEPENDENCIES = ../src/libyaz.la
am_test_xmalloc_OBJECTS = test_xmalloc.$(OBJEXT)
test_xmalloc_OBJECTS = $(am_test_xmalloc_OBJECTS)
test_xmalloc_LDADD = $(LDADD)
test_xmalloc_DEPENDENCIES = ../src/libyaz.la
am_test_xml_include_OBJECTS = test_xml_include.$(OBJEXT)
test_xml_include_OBJECTS = $(am_test_xml_include_OBJECTS)
test_xml_include_LDADD = $(LDADD)
test_xml_include_DEPENDENCIES = ../src/libyaz.la
am_test_xmlquery_OBJECTS = test_xmlquery.$(OBJEXT)
test_xmlquery_OBJECTS = $(am_test_xmlquery_OBJECTS)
test_xmlquery_LDADD = $(LDADD)
test_xmlquery_DEPENDENCIES = ../src/libyaz.la
DEFAULT_INCLUDES = -I.@am__isrc@ -I$(top_builddir)/include
depcomp = $(SHELL) $(top_srcdir)/config/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
SOURCES = $(test_ccl_SOURCES) $(test_comstack_SOURCES) \
	$(test_cql2ccl_SOURCES) $(test_file_glob_SOURCES) \
	$(test_filepath_SOURCES) $(test_iconv_SOURCES) \
	$(test_icu_SOURCES) $(test_json_SOURCES) \
	$(test_libstemmer_SOURCES) $(test_log_SOURCES) \
	$(test_log_thread_SOURCES) $(test_match_glob_SOURCES) \
	$(test_matchstr_SOURCES) $(test_mutex_SOURCES) \
	$(test_nmem_SOURCES) $(test_odr_SOURCES) \
	$(test_odrstack_SOURCES) $(test_oid_SOURCES) \
	$(test_options_SOURCES) $(test_pquery_SOURCES) \
	$(test_query_charset_SOURCES) $(test_record_conv_SOURCES) \
	$(test_retrieval_SOURCES) $(test_rpn2cql_SOURCES) \
	$(test_rpn2solr_SOURCES) $(test_shared_ptr_SOURCES) \
	$(test_soap1_SOURCES) $(test_soap2_SOURCES) \
	$(test_solr_SOURCES) $(test_sortspec_SOURCES) \
	$(test_timing_SOURCES) $(test_tpath_SOURCES) \
	$(test_wrbuf_SOURCES) $(test_xmalloc_SOURCES) \
	$(test_xml_include_SOURCES) $(test_xmlquery_SOURCES)
DIST_SOURCES = $(test_ccl_SOURCES) $(test_comstack_SOURCES) \
	$(test_cql2ccl_SOURCES) $(test_file_glob_SOURCES) \
	$(test_filepath_SOURCES) $(test_iconv_SOURCES) \
	$(test_icu_SOURCES) $(test_json_SOURCES) \
	$(test_libstemmer_SOURCES) $(test_log_SOURCES) \
	$(test_log_thread_SOURCES) $(test_match_glob_SOURCES) \
	$(test_matchstr_SOURCES) $(test_mutex_SOURCES) \
	$(test_nmem_SOURCES) $(test_odr_SOURCES) \
	$(test_odrstack_SOURCES) $(test_oid_SOURCES) \
	$(test_options_SOURCES) $(test_pquery_SOURCES) \
	$(test_query_charset_SOURCES) $(test_record_conv_SOURCES) \
	$(test_retrieval_SOURCES) $(test_rpn2cql_SOURCES) \
	$(test_rpn2solr_SOURCES) $(test_shared_ptr_SOURCES) \
	$(test_soap1_SOURCES) $(test_soap2_SOURCES) \
	$(test_solr_SOURCES) $(test_sortspec_SOURCES) \
	$(test_timing_SOURCES) $(test_tpath_SOURCES) \
	$(test_wrbuf_SOURCES) $(test_xmalloc_SOURCES) \
	$(test_xml_include_SOURCES) $(test_xmlquery_SOURCES)
ETAGS = etags
CTAGS = ctags
am__tty_colors = \
red=; grn=; lgn=; blu=; std=
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = @ACLOCAL@
AMTAR = @AMTAR@
AR = @AR@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
CC = @CC@
CCDEPMODE = @CCDEPMODE@
CFLAGS = @CFLAGS@
CPP = @CPP@
CPPFLAGS = @CPPFLAGS@
CYGPATH_W = @CYGPATH_W@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
DLLTOOL = @DLLTOOL@
DSSSL_DIR = @DSSSL_DIR@
DSYMUTIL = @DSYMUTIL@
DTD_DIR = @DTD_DIR@
DUMPBIN = @DUMPBIN@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
EXEEXT = @EXEEXT@
FGREP = @FGREP@
GREP = @GREP@
HTML_COMPILE = @HTML_COMPILE@
ICU_CFLAGS = @ICU_CFLAGS@
ICU_CONFIG = @ICU_CONFIG@
ICU_CPPFLAGS = @ICU_CPPFLAGS@
ICU_CXXFLAGS = @ICU_CXXFLAGS@
ICU_LIBS = @ICU_LIBS@
INSTALL = @INSTALL@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
LD = @LD@
LDFLAGS = @LDFLAGS@
LIBOBJS = @LIBOBJS@
LIBS = @LIBS@
LIBTOOL = @LIBTOOL@
LIPO = @LIPO@
LN_S = @LN_S@
LTLIBOBJS = @LTLIBOBJS@
MAKEINFO = @MAKEINFO@
MANIFEST_TOOL = @MANIFEST_TOOL@
MAN_COMPILE = @MAN_COMPILE@
MKDIR_P = @MKDIR_P@
NM = @NM@
NMEDIT = @NMEDIT@
OBJDUMP = @OBJDUMP@
OBJEXT = @OBJEXT@
OTOOL = @OTOOL@
OTOOL64 = @OTOOL64@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_URL = @PACKAGE_URL@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
PDF_COMPILE = @PDF_COMPILE@
PTHREAD_CC = @PTHREAD_CC@
PTHREAD_CFLAGS = @PTHREAD_CFLAGS@
PTHREAD_LIBS = @PTHREAD_LIBS@
RANLIB = @RANLIB@
READLINE_LIBS = @READLINE_LIBS@
SED = @SED@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
SSL_CFLAGS = @SSL_CFLAGS@
SSL_LIBS = @SSL_LIBS@
STRIP = @STRIP@
TCLSH = @TCLSH@
TCPD_LIBS = @TCPD_LIBS@
TKL_COMPILE = @TKL_COMPILE@
VERSION = @VERSION@
VERSION_HEX = @VERSION_HEX@
VERSION_SHA1 = @VERSION_SHA1@
WIN_FILEVERSION = @WIN_FILEVERSION@
XML2_CFLAGS = @XML2_CFLAGS@
XSLTPROC_COMPILE = @XSLTPROC_COMPILE@
XSL_DIR = @XSL_DIR@
YACC = @YACC@
YAZ_CONFIG_CFLAGS = @YAZ_CONFIG_CFLAGS@
YAZ_CONF_CFLAGS = @YAZ_CONF_CFLAGS@
abs_builddir = @abs_builddir@
abs_srcdir = @abs_srcdir@
abs_top_builddir = @abs_top_builddir@
abs_top_srcdir = @abs_top_srcdir@
ac_ct_AR = @ac_ct_AR@
ac_ct_CC = @ac_ct_CC@
ac_ct_DUMPBIN = @ac_ct_DUMPBIN@
acx_pthread_config = @acx_pthread_config@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_vendor = @build_vendor@
builddir = @builddir@
datadir = @datadir@
datarootdir = @datarootdir@
docdir = @docdir@
dvidir = @dvidir@
exec_prefix = @exec_prefix@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
htmldir = @htmldir@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
libdir = @libdir@
libexecdir = @libexecdir@
localedir = @localedir@
localstatedir = @localstatedir@
mandir = @mandir@
mkdir_p = @mkdir_p@
oldincludedir = @oldincludedir@
pdfdir = @pdfdir@
pkgconfigpath = @pkgconfigpath@
prefix = @prefix@
program_transform_name = @program_transform_name@
psdir = @psdir@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
srcdir = @srcdir@
sysconfdir = @sysconfdir@
target_alias = @target_alias@
top_build_prefix = @top_build_prefix@
top_builddir = @top_builddir@
top_srcdir = @top_srcdir@
check_SCRIPTS = test_marc.sh test_marccol.sh test_cql2xcql.sh \
	test_cql2pqf.sh test_icu.sh

TESTS = $(check_PROGRAMS) $(check_SCRIPTS)
EXTRA_DIST = tstodr.asn test_odrcodec.c test_odrcodec.h cql2xcqlsample \
 cql2pqf-order.txt cql2pqfsample \
 $(check_SCRIPTS) \
 marccol1.u8.marc marccol1.u8.1.lst marccol1.u8.2.lst \
 marccol2.u8.marc marccol2.u8.1.lst marccol2.u8.2.lst \
 marccol3.u8.marc marccol3.u8.1.lst marccol3.u8.2.lst \
 marccol4.u8.marc marccol4.u8.1.lst marccol4.u8.2.lst \
 marccol5.u8.marc marccol5.u8.1.lst marccol5.u8.2.lst \
 test_icu.0.xml test_icu.0.input test_icu.0.output \
 test_icu.1.xml test_icu.1.input test_icu.1.output \
 test_icu.2.xml test_icu.2.input test_icu.2.output \
 test_icu.3.xml test_icu.3.input test_icu.3.output \
 test_record_conv.xsl test_xml_include.xml

YAZCOMP = ../util/yaz-asncomp
YAZCOMPLINE = $(YAZCOMP) -d z.tcl -i yaz -I../include $(YCFLAGS)
AM_CPPFLAGS = -I$(top_srcdir)/include $(XML2_CFLAGS) $(ICU_CPPFLAGS)
LDADD = ../src/libyaz.la 
test_icu_LDADD = ../src/libyaz_icu.la ../src/libyaz.la $(ICU_LIBS)
test_libstemmer_LDADD = ../src/libyaz_icu.la ../src/libyaz.la $(ICU_LIBS)
CONFIG_CLEAN_FILES = *.log
test_cql2ccl_SOURCES = test_cql2ccl.c
test_xmalloc_SOURCES = test_xmalloc.c
test_iconv_SOURCES = test_iconv.c
test_nmem_SOURCES = test_nmem.c
test_matchstr_SOURCES = test_matchstr.c
test_wrbuf_SOURCES = test_wrbuf.c
test_odr_SOURCES = test_odrcodec.c test_odrcodec.h test_odr.c
test_odrstack_SOURCES = test_odrstack.c
test_ccl_SOURCES = test_ccl.c
test_log_SOURCES = test_log.c
test_mutex_SOURCES = test_mutex.c
test_soap1_SOURCES = test_soap1.c
test_soap2_SOURCES = test_soap2.c
test_solr_SOURCES = test_solr.c
test_sortspec_SOURCES = test_sortspec.c
test_log_thread_SOURCES = test_log_thread.c
test_xmlquery_SOURCES = test_xmlquery.c
test_options_SOURCES = test_options.c
test_pquery_SOURCES = test_pquery.c
test_comstack_SOURCES = test_comstack.c
test_filepath_SOURCES = test_filepath.c
test_oid_SOURCES = test_oid.c
test_record_conv_SOURCES = test_record_conv.c
test_retrieval_SOURCES = test_retrieval.c
test_tpath_SOURCES = test_tpath.c
test_timing_SOURCES = test_timing.c
test_query_charset_SOURCES = test_query_charset.c
test_icu_SOURCES = test_icu.c
test_match_glob_SOURCES = test_match_glob.c
test_rpn2cql_SOURCES = test_rpn2cql.c
test_rpn2solr_SOURCES = test_rpn2solr.c
test_json_SOURCES = test_json.c
test_xml_include_SOURCES = test_xml_include.c
test_file_glob_SOURCES = test_file_glob.c
test_shared_ptr_SOURCES = test_shared_ptr.c
test_libstemmer_SOURCES = test_libstemmer.c
all: all-am

.SUFFIXES:
.SUFFIXES: .c .lo .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu test/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --gnu test/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):

clean-checkPROGRAMS:
	@list='$(check_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list
test_ccl$(EXEEXT): $(test_ccl_OBJECTS) $(test_ccl_DEPENDENCIES) 
	@rm -f test_ccl$(EXEEXT)
	$(LINK) $(test_ccl_OBJECTS) $(test_ccl_LDADD) $(LIBS)
test_comstack$(EXEEXT): $(test_comstack_OBJECTS) $(test_comstack_DEPENDENCIES) 
	@rm -f test_comstack$(EXEEXT)
	$(LINK) $(test_comstack_OBJECTS) $(test_comstack_LDADD) $(LIBS)
test_cql2ccl$(EXEEXT): $(test_cql2ccl_OBJECTS) $(test_cql2ccl_DEPENDENCIES) 
	@rm -f test_cql2ccl$(EXEEXT)
	$(LINK) $(test_cql2ccl_OBJECTS) $(test_cql2ccl_LDADD) $(LIBS)
test_file_glob$(EXEEXT): $(test_file_glob_OBJECTS) $(test_file_glob_DEPENDENCIES) 
	@rm -f test_file_glob$(EXEEXT)
	$(LINK) $(test_file_glob_OBJECTS) $(test_file_glob_LDADD) $(LIBS)
test_filepath$(EXEEXT): $(test_filepath_OBJECTS) $(test_filepath_DEPENDENCIES) 
	@rm -f test_filepath$(EXEEXT)
	$(LINK) $(test_filepath_OBJECTS) $(test_filepath_LDADD) $(LIBS)
test_iconv$(EXEEXT): $(test_iconv_OBJECTS) $(test_iconv_DEPENDENCIES) 
	@rm -f test_iconv$(EXEEXT)
	$(LINK) $(test_iconv_OBJECTS) $(test_iconv_LDADD) $(LIBS)
test_icu$(EXEEXT): $(test_icu_OBJECTS) $(test_icu_DEPENDENCIES) 
	@rm -f test_icu$(EXEEXT)
	$(LINK) $(test_icu_OBJECTS) $(test_icu_LDADD) $(LIBS)
test_json$(EXEEXT): $(test_json_OBJECTS) $(test_json_DEPENDENCIES) 
	@rm -f test_json$(EXEEXT)
	$(LINK) $(test_json_OBJECTS) $(test_json_LDADD) $(LIBS)
test_libstemmer$(EXEEXT): $(test_libstemmer_OBJECTS) $(test_libstemmer_DEPENDENCIES) 
	@rm -f test_libstemmer$(EXEEXT)
	$(LINK) $(test_libstemmer_OBJECTS) $(test_libstemmer_LDADD) $(LIBS)
test_log$(EXEEXT): $(test_log_OBJECTS) $(test_log_DEPENDENCIES) 
	@rm -f test_log$(EXEEXT)
	$(LINK) $(test_log_OBJECTS) $(test_log_LDADD) $(LIBS)
test_log_thread$(EXEEXT): $(test_log_thread_OBJECTS) $(test_log_thread_DEPENDENCIES) 
	@rm -f test_log_thread$(EXEEXT)
	$(LINK) $(test_log_thread_OBJECTS) $(test_log_thread_LDADD) $(LIBS)
test_match_glob$(EXEEXT): $(test_match_glob_OBJECTS) $(test_match_glob_DEPENDENCIES) 
	@rm -f test_match_glob$(EXEEXT)
	$(LINK) $(test_match_glob_OBJECTS) $(test_match_glob_LDADD) $(LIBS)
test_matchstr$(EXEEXT): $(test_matchstr_OBJECTS) $(test_matchstr_DEPENDENCIES) 
	@rm -f test_matchstr$(EXEEXT)
	$(LINK) $(test_matchstr_OBJECTS) $(test_matchstr_LDADD) $(LIBS)
test_mutex$(EXEEXT): $(test_mutex_OBJECTS) $(test_mutex_DEPENDENCIES) 
	@rm -f test_mutex$(EXEEXT)
	$(LINK) $(test_mutex_OBJECTS) $(test_mutex_LDADD) $(LIBS)
test_nmem$(EXEEXT): $(test_nmem_OBJECTS) $(test_nmem_DEPENDENCIES) 
	@rm -f test_nmem$(EXEEXT)
	$(LINK) $(test_nmem_OBJECTS) $(test_nmem_LDADD) $(LIBS)
test_odr$(EXEEXT): $(test_odr_OBJECTS) $(test_odr_DEPENDENCIES) 
	@rm -f test_odr$(EXEEXT)
	$(LINK) $(test_odr_OBJECTS) $(test_odr_LDADD) $(LIBS)
test_odrstack$(EXEEXT): $(test_odrstack_OBJECTS) $(test_odrstack_DEPENDENCIES) 
	@rm -f test_odrstack$(EXEEXT)
	$(LINK) $(test_odrstack_OBJECTS) $(test_odrstack_LDADD) $(LIBS)
test_oid$(EXEEXT): $(test_oid_OBJECTS) $(test_oid_DEPENDENCIES) 
	@rm -f test_oid$(EXEEXT)
	$(LINK) $(test_oid_OBJECTS) $(test_oid_LDADD) $(LIBS)
test_options$(EXEEXT): $(test_options_OBJECTS) $(test_options_DEPENDENCIES) 
	@rm -f test_options$(EXEEXT)
	$(LINK) $(test_options_OBJECTS) $(test_options_LDADD) $(LIBS)
test_pquery$(EXEEXT): $(test_pquery_OBJECTS) $(test_pquery_DEPENDENCIES) 
	@rm -f test_pquery$(EXEEXT)
	$(LINK) $(test_pquery_OBJECTS) $(test_pquery_LDADD) $(LIBS)
test_query_charset$(EXEEXT): $(test_query_charset_OBJECTS) $(test_query_charset_DEPENDENCIES) 
	@rm -f test_query_charset$(EXEEXT)
	$(LINK) $(test_query_charset_OBJECTS) $(test_query_charset_LDADD) $(LIBS)
test_record_conv$(EXEEXT): $(test_record_conv_OBJECTS) $(test_record_conv_DEPENDENCIES) 
	@rm -f test_record_conv$(EXEEXT)
	$(LINK) $(test_record_conv_OBJECTS) $(test_record_conv_LDADD) $(LIBS)
test_retrieval$(EXEEXT): $(test_retrieval_OBJECTS) $(test_retrieval_DEPENDENCIES) 
	@rm -f test_retrieval$(EXEEXT)
	$(LINK) $(test_retrieval_OBJECTS) $(test_retrieval_LDADD) $(LIBS)
test_rpn2cql$(EXEEXT): $(test_rpn2cql_OBJECTS) $(test_rpn2cql_DEPENDENCIES) 
	@rm -f test_rpn2cql$(EXEEXT)
	$(LINK) $(test_rpn2cql_OBJECTS) $(test_rpn2cql_LDADD) $(LIBS)
test_rpn2solr$(EXEEXT): $(test_rpn2solr_OBJECTS) $(test_rpn2solr_DEPENDENCIES) 
	@rm -f test_rpn2solr$(EXEEXT)
	$(LINK) $(test_rpn2solr_OBJECTS) $(test_rpn2solr_LDADD) $(LIBS)
test_shared_ptr$(EXEEXT): $(test_shared_ptr_OBJECTS) $(test_shared_ptr_DEPENDENCIES) 
	@rm -f test_shared_ptr$(EXEEXT)
	$(LINK) $(test_shared_ptr_OBJECTS) $(test_shared_ptr_LDADD) $(LIBS)
test_soap1$(EXEEXT): $(test_soap1_OBJECTS) $(test_soap1_DEPENDENCIES) 
	@rm -f test_soap1$(EXEEXT)
	$(LINK) $(test_soap1_OBJECTS) $(test_soap1_LDADD) $(LIBS)
test_soap2$(EXEEXT): $(test_soap2_OBJECTS) $(test_soap2_DEPENDENCIES) 
	@rm -f test_soap2$(EXEEXT)
	$(LINK) $(test_soap2_OBJECTS) $(test_soap2_LDADD) $(LIBS)
test_solr$(EXEEXT): $(test_solr_OBJECTS) $(test_solr_DEPENDENCIES) 
	@rm -f test_solr$(EXEEXT)
	$(LINK) $(test_solr_OBJECTS) $(test_solr_LDADD) $(LIBS)
test_sortspec$(EXEEXT): $(test_sortspec_OBJECTS) $(test_sortspec_DEPENDENCIES) 
	@rm -f test_sortspec$(EXEEXT)
	$(LINK) $(test_sortspec_OBJECTS) $(test_sortspec_LDADD) $(LIBS)
test_timing$(EXEEXT): $(test_timing_OBJECTS) $(test_timing_DEPENDENCIES) 
	@rm -f test_timing$(EXEEXT)
	$(LINK) $(test_timing_OBJECTS) $(test_timing_LDADD) $(LIBS)
test_tpath$(EXEEXT): $(test_tpath_OBJECTS) $(test_tpath_DEPENDENCIES) 
	@rm -f test_tpath$(EXEEXT)
	$(LINK) $(test_tpath_OBJECTS) $(test_tpath_LDADD) $(LIBS)
test_wrbuf$(EXEEXT): $(test_wrbuf_OBJECTS) $(test_wrbuf_DEPENDENCIES) 
	@rm -f test_wrbuf$(EXEEXT)
	$(LINK) $(test_wrbuf_OBJECTS) $(test_wrbuf_LDADD) $(LIBS)
test_xmalloc$(EXEEXT): $(test_xmalloc_OBJECTS) $(test_xmalloc_DEPENDENCIES) 
	@rm -f test_xmalloc$(EXEEXT)
	$(LINK) $(test_xmalloc_OBJECTS) $(test_xmalloc_LDADD) $(LIBS)
test_xml_include$(EXEEXT): $(test_xml_include_OBJECTS) $(test_xml_include_DEPENDENCIES) 
	@rm -f test_xml_include$(EXEEXT)
	$(LINK) $(test_xml_include_OBJECTS) $(test_xml_include_LDADD) $(LIBS)
test_xmlquery$(EXEEXT): $(test_xmlquery_OBJECTS) $(test_xmlquery_DEPENDENCIES) 
	@rm -f test_xmlquery$(EXEEXT)
	$(LINK) $(test_xmlquery_OBJECTS) $(test_xmlquery_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_ccl.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_comstack.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_cql2ccl.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_file_glob.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_filepath.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_iconv.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_icu.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_json.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_libstemmer.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_log.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_log_thread.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_match_glob.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_matchstr.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_mutex.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_nmem.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_odr.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_odrcodec.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_odrstack.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_oid.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_options.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_pquery.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_query_charset.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_record_conv.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_retrieval.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_rpn2cql.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_rpn2solr.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_shared_ptr.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_soap1.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_soap2.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_solr.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_sortspec.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_timing.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_tpath.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_wrbuf.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_xmalloc.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_xml_include.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_xmlquery.Po@am__quote@

.c.o:
@am__fastdepCC_TRUE@	$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(COMPILE) -c $<

.c.obj:
@am__fastdepCC_TRUE@	$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(COMPILE) -c `$(CYGPATH_W) '$<'`

.c.lo:
@am__fastdepCC_TRUE@	$(LTCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$<' object='$@' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LTCOMPILE) -c -o $@ $<

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	set x; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

check-TESTS: $(TESTS)
	@failed=0; all=0; xfail=0; xpass=0; skip=0; \
	srcdir=$(srcdir); export srcdir; \
	list=' $(TESTS) '; \
	$(am__tty_colors); \
	if test -n "$$list"; then \
	  for tst in $$list; do \
	    if test -f ./$$tst; then dir=./; \
	    elif test -f $$tst; then dir=; \
	    else dir="$(srcdir)/"; fi; \
	    if $(TESTS_ENVIRONMENT) $${dir}$$tst; then \
	      all=`expr $$all + 1`; \
	      case " $(XFAIL_TESTS) " in \
	      *[\ \	]$$tst[\ \	]*) \
		xpass=`expr $$xpass + 1`; \
		failed=`expr $$failed + 1`; \
		col=$$red; res=XPASS; \
	      ;; \
	      *) \
		col=$$grn; res=PASS; \
	      ;; \
	      esac; \
	    elif test $$? -ne 77; then \
	      all=`expr $$all + 1`; \
	      case " $(XFAIL_TESTS) " in \
	      *[\ \	]$$tst[\ \	]*) \
		xfail=`expr $$xfail + 1`; \
		col=$$lgn; res=XFAIL; \
	      ;; \
	      *) \
		failed=`expr $$failed + 1`; \
		col=$$red; res=FAIL; \
	      ;; \
	      esac; \
	    else \
	      skip=`expr $$skip + 1`; \
	      col=$$blu; res=SKIP; \
	    fi; \
	    echo "$${col}$$res$${std}: $$tst"; \
	  done; \
	  if test "$$all" -eq 1; then \
	    tests="test"; \
	    All=""; \
	  else \
	    tests="tests"; \
	    All="All "; \
	  fi; \
	  if test "$$failed" -eq 0; then \
	    if test "$$xfail" -eq 0; then \
	      banner="$$All$$all $$tests passed"; \
	    else \
	      if test "$$xfail" -eq 1; then failures=failure; else failures=failures; fi; \
	      banner="$$All$$all $$tests behaved as expected ($$xfail expected $$failures)"; \
	    fi; \
	  else \
	    if test "$$xpass" -eq 0; then \
	      banner="$$failed of $$all $$tests failed"; \
	    else \
	      if test "$$xpass" -eq 1; then passes=pass; else passes=passes; fi; \
	      banner="$$failed of $$all $$tests did not behave as expected ($$xpass unexpected $$passes)"; \
	    fi; \
	  fi; \
	  dashes="$$banner"; \
	  skipped=""; \
	  if test "$$skip" -ne 0; then \
	    if test "$$skip" -eq 1; then \
	      skipped="($$skip test was not run)"; \
	    else \
	      skipped="($$skip tests were not run)"; \
	    fi; \
	    test `echo "$$skipped" | wc -c` -le `echo "$$banner" | wc -c` || \
	      dashes="$$skipped"; \
	  fi; \
	  report=""; \
	  if test "$$failed" -ne 0 && test -n "$(PACKAGE_BUGREPORT)"; then \
	    report="Please report to $(PACKAGE_BUGREPORT)"; \
	    test `echo "$$report" | wc -c` -le `echo "$$banner" | wc -c` || \
	      dashes="$$report"; \
	  fi; \
	  dashes=`echo "$$dashes" | sed s/./=/g`; \
	  if test "$$failed" -eq 0; then \
	    echo "$$grn$$dashes"; \
	  else \
	    echo "$$red$$dashes"; \
	  fi; \
	  echo "$$banner"; \
	  test -z "$$skipped" || echo "$$skipped"; \
	  test -z "$$report" || echo "$$report"; \
	  echo "$$dashes$$std"; \
	  test "$$failed" -eq 0; \
	else :; fi

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
	$(MAKE) $(AM_MAKEFLAGS) \
	  top_distdir="$(top_distdir)" distdir="$(distdir)" \
	  dist-hook
check-am: all-am
	$(MAKE) $(AM_MAKEFLAGS) $(check_PROGRAMS) $(check_SCRIPTS)
	$(MAKE) $(AM_MAKEFLAGS) check-TESTS
check: check-am
all-am: Makefile
installdirs:
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-checkPROGRAMS clean-generic clean-libtool \
	mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am:

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am:

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am:

.MAKE: check-am install-am install-strip

.PHONY: CTAGS GTAGS all all-am check check-TESTS check-am clean \
	clean-checkPROGRAMS clean-generic clean-libtool ctags \
	dist-hook distclean distclean-compile distclean-generic \
	distclean-libtool distclean-tags distdir dvi dvi-am html \
	html-am info info-am install install-am install-data \
	install-data-am install-dvi install-dvi-am install-exec \
	install-exec-am install-html install-html-am install-info \
	install-info-am install-man install-pdf install-pdf-am \
	install-ps install-ps-am install-strip installcheck \
	installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	tags uninstall uninstall-am


dist-hook:
	mkdir -p $(distdir)/cql
	cp $(srcdir)/cql/*.err $(srcdir)/cql/*.out $(distdir)/cql
	mkdir -p $(distdir)/cql2pqf
	cp $(srcdir)/cql2pqf/*.err $(srcdir)/cql2pqf/*.out $(distdir)/cql2pqf
	cp $(srcdir)/marc?.chr $(distdir)
	cp $(srcdir)/marc?.marc $(distdir)
	cp $(srcdir)/marc?.xml $(distdir)
	cp $(srcdir)/*.xml.marc $(distdir)
	cp $(srcdir)/xml2marc?.xml $(distdir)
	cp $(srcdir)/tmarc?.xml $(distdir)
	cp $(srcdir)/xml2tmarc?.xml $(distdir)

# Rule for generating codecs for our small ASN.1 spec
test_odrcodec.c test_odrcodec.h: tstodr.asn $(YAZCOMP)
	cd $(srcdir); $(YAZCOMP) tstodr.asn

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
